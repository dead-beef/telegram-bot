#!/bin/bash

if (( $# != 1 && $# != 2 )); then
	echo "usage: $0 <image> [languages]" >&2
	exit 1
fi

TMP="$(mktemp --tmpdir --suffix=.png)"
START_TIME="$(date +%s)"
MAX_TIME=60

end() { rm -f "$TMP"; }
ocr() {
	tesseract "$1" stdout -l "$LANG" 2>&1 \
		| sed -r 's/^\s+//; s/\s+$//; /^$/ d; /^(Empty page!!|Using default language params)$/ d;';
}
dtime() {
    echo $(( $(date +%s) - START_TIME ))
}
dtimebreak() {
	if (( $(dtime) >= $1 )); then
		printf '<timeout>\n'
		exit 0
	fi
}

trap end EXIT

IMG="$1"
LANG="$2"
[[ -z $LANG ]] && LANG='eng+rus+jpn'

output="$(ocr "$IMG")"
[[ -z $output ]] && output="<no text found>"
printf "(0)\n%s\n\n" "$output"
dtimebreak $(( MAX_TIME / 2 - 1 ))

convert "$IMG" -fx 'max(r,g,b)-min(r,g,b) < 0.2 && (r+g+b)/3 < 0.6 ? 0 : 1' "$TMP"
dtimebreak $(( MAX_TIME / 2 - 1 ))
output="$(ocr "$TMP")"
[[ -z $output ]] && output="<no text found>"
printf "(1)\n%s\n\n" "$output"
dtimebreak $(( MAX_TIME * 2 / 3 - 1 ))

convert "$IMG" -fx 'max(r,g,b)-min(r,g,b) < 0.2 && 1-(r+g+b)/3 < 0.1 ? 0 : 1' "$TMP"
dtimebreak $(( MAX_TIME * 2 / 3 - 1 ))
output="$(ocr "$TMP")"
[[ -z $output ]] && output="<no text found>"
printf "(2)\n%s\n\n" "$output"
